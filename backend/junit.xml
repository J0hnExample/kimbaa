<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="58" failures="0" errors="0" time="42.076">
  <testsuite name="UserService.test.ts" errors="0" failures="0" skipped="0" timestamp="2024-05-21T16:45:19" time="15.597" tests="18">
    <testcase classname=" UserService.test getAlleUser" name=" UserService.test getAlleUser" time="0.694">
    </testcase>
    <testcase classname=" UserService.test createUser " name=" UserService.test createUser " time="0.7">
    </testcase>
    <testcase classname=" UserService.test getOneUser by studentId(number)" name=" UserService.test getOneUser by studentId(number)" time="0.425">
    </testcase>
    <testcase classname=" UserService.test getOneUser by email" name=" UserService.test getOneUser by email" time="0.391">
    </testcase>
    <testcase classname=" UserService.test Create User with minimal data" name=" UserService.test Create User with minimal data" time="0.587">
    </testcase>
    <testcase classname=" UserService.test deleteUser" name=" UserService.test deleteUser" time="0.626">
    </testcase>
    <testcase classname=" UserService.test create user without password" name=" UserService.test create user without password" time="0.388">
    </testcase>
    <testcase classname=" UserService.test createUser with same studentId" name=" UserService.test createUser with same studentId" time="0.545">
    </testcase>
    <testcase classname=" UserService.test createUser with same email" name=" UserService.test createUser with same email" time="0.527">
    </testcase>
    <testcase classname=" UserService.test createUser with empty name" name=" UserService.test createUser with empty name" time="0.368">
    </testcase>
    <testcase classname=" UserService.test updateUser name" name=" UserService.test updateUser name" time="0.598">
    </testcase>
    <testcase classname=" UserService.test updateUser name + password" name=" UserService.test updateUser name + password" time="0.897">
    </testcase>
    <testcase classname=" UserService.test updateUser with empty name" name=" UserService.test updateUser with empty name" time="0.506">
    </testcase>
    <testcase classname=" UserService.test getUser with wrong studentID" name=" UserService.test getUser with wrong studentID" time="0.313">
    </testcase>
    <testcase classname=" UserService.test deleteUser not found" name=" UserService.test deleteUser not found" time="0.31">
    </testcase>
    <testcase classname=" UserService.test getOneUser without studentId and email must fail" name=" UserService.test getOneUser without studentId and email must fail" time="0.274">
    </testcase>
    <testcase classname=" UserService.test updateUser not found" name=" UserService.test updateUser not found" time="0.448">
    </testcase>
    <testcase classname=" UserService.test deleteUser not found" name=" UserService.test deleteUser not found" time="0.274">
    </testcase>
  </testsuite>
  <testsuite name="loginRoute.test.ts" errors="0" failures="0" skipped="0" timestamp="2024-05-21T16:45:35" time="6.964" tests="2">
    <testcase classname=" /api/login login with correct credentials" name=" /api/login login with correct credentials" time="0.839">
    </testcase>
    <testcase classname=" /api/login login with wrong credentials" name=" /api/login login with wrong credentials" time="0.383">
    </testcase>
  </testsuite>
  <testsuite name="userRoute.test.ts" errors="0" failures="0" skipped="0" timestamp="2024-05-21T16:45:42" time="4.68" tests="4">
    <testcase classname=" /api/user getAlleUser" name=" /api/user getAlleUser" time="0.719">
    </testcase>
    <testcase classname=" /api/user/getOneId" name=" /api/user/getOneId" time="0.519">
    </testcase>
    <testcase classname=" /api/user/getOneEmail" name=" /api/user/getOneEmail" time="0.532">
    </testcase>
    <testcase classname=" /api/user/create" name=" /api/user/create" time="0.666">
    </testcase>
  </testsuite>
  <testsuite name="UserHash.test.ts" errors="0" failures="0" skipped="0" timestamp="2024-05-21T16:45:47" time="5.268" tests="10">
    <testcase classname=" UserHash.test. Passwort wird korrekt gehasht" name=" UserHash.test. Passwort wird korrekt gehasht" time="0.437">
    </testcase>
    <testcase classname=" UserHash.test.js Passwort Änderung" name=" UserHash.test.js Passwort Änderung" time="0.596">
    </testcase>
    <testcase classname=" UserHash.test.js Passwort bleibt unverändert, wenn nicht geändert" name=" UserHash.test.js Passwort bleibt unverändert, wenn nicht geändert" time="0.313">
    </testcase>
    <testcase classname=" UserHash.test.js isCorrectPassword gibt true für korrektes Passwort" name=" UserHash.test.js isCorrectPassword gibt true für korrektes Passwort" time="0.289">
    </testcase>
    <testcase classname=" UserHash.test.js isCorrectPassword gibt false für ungültiges Passwort" name=" UserHash.test.js isCorrectPassword gibt false für ungültiges Passwort" time="0.302">
    </testcase>
    <testcase classname=" UserHash.test.js User kann nicht mit leerem Passwort erstellt werden" name=" UserHash.test.js User kann nicht mit leerem Passwort erstellt werden" time="0.203">
    </testcase>
    <testcase classname=" UserHash.test.js isCorrectPassword gibt false wenn falsches Passwort bei gespeichertem User eingegeben wird" name=" UserHash.test.js isCorrectPassword gibt false wenn falsches Passwort bei gespeichertem User eingegeben wird" time="0.315">
    </testcase>
    <testcase classname=" UserHash.test.js isCorrectPassword gibt false wenn der Passworthash bei gespeichertem User eingegeben wird" name=" UserHash.test.js isCorrectPassword gibt false wenn der Passworthash bei gespeichertem User eingegeben wird" time="0.188">
    </testcase>
    <testcase classname=" UserHash.test.js isCorrectPassword gibt fehler wenn der Passwortänderung nicht gespeichert wird" name=" UserHash.test.js isCorrectPassword gibt fehler wenn der Passwortänderung nicht gespeichert wird" time="0.276">
    </testcase>
    <testcase classname=" UserHash.test.js isCorrectPassword gibt false wenn kein Passwort und kein Passwort eingegeben wird" name=" UserHash.test.js isCorrectPassword gibt false wenn kein Passwort und kein Passwort eingegeben wird" time="0.257">
    </testcase>
  </testsuite>
  <testsuite name="AuthenticationService.test.ts" errors="0" failures="0" skipped="0" timestamp="2024-05-21T16:45:52" time="3.228" tests="7">
    <testcase classname=" AuthenticationService.test Loggin Password correct" name=" AuthenticationService.test Loggin Password correct" time="0.372">
    </testcase>
    <testcase classname=" AuthenticationService.test Loggin Password not correct" name=" AuthenticationService.test Loggin Password not correct" time="0.15">
    </testcase>
    <testcase classname=" AuthenticationService.test Loggin User not found" name=" AuthenticationService.test Loggin User not found" time="0.155">
    </testcase>
    <testcase classname=" AuthenticationService.test Loggin Password not found" name=" AuthenticationService.test Loggin Password not found" time="0.151">
    </testcase>
    <testcase classname=" AuthenticationService.test Loggin Admin" name=" AuthenticationService.test Loggin Admin" time="0.403">
    </testcase>
    <testcase classname=" AuthenticationService.test Loggin User" name=" AuthenticationService.test Loggin User" time="0.282">
    </testcase>
    <testcase classname=" AuthenticationService.test Loggin Default" name=" AuthenticationService.test Loggin Default" time="0.281">
    </testcase>
  </testsuite>
  <testsuite name="test.test.ts" errors="0" failures="0" skipped="0" timestamp="2024-05-21T16:45:56" time="0.582" tests="1">
    <testcase classname=" test" name=" test" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="ServiceHelper.test.ts" errors="0" failures="0" skipped="0" timestamp="2024-05-21T16:45:56" time="0.901" tests="5">
    <testcase classname=" dateToString zweistellig" name=" dateToString zweistellig" time="0.005">
    </testcase>
    <testcase classname=" dateToString einstellig" name=" dateToString einstellig" time="0.002">
    </testcase>
    <testcase classname=" stringToDate zweistellig" name=" stringToDate zweistellig" time="0.002">
    </testcase>
    <testcase classname=" stringToDate einstellig mit Null" name=" stringToDate einstellig mit Null" time="0.001">
    </testcase>
    <testcase classname=" stringToDate einstellig ohne Null" name=" stringToDate einstellig ohne Null" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="UserModel.test.ts" errors="0" failures="0" skipped="0" timestamp="2024-05-21T16:45:57" time="3.883" tests="11">
    <testcase classname=" UserModel.test createUser" name=" UserModel.test createUser" time="0.295">
    </testcase>
    <testcase classname=" UserModel.test createUser twice same name" name=" UserModel.test createUser twice same name" time="0.361">
    </testcase>
    <testcase classname=" UserModel.test createUser twice same studentId must fail" name=" UserModel.test createUser twice same studentId must fail" time="0.174">
    </testcase>
    <testcase classname=" UserModel.test createUser without password must fail" name=" UserModel.test createUser without password must fail" time="0.021">
    </testcase>
    <testcase classname=" UserModel.test find user by name" name=" UserModel.test find user by name" time="0.164">
    </testcase>
    <testcase classname=" UserModel.test studentId must min 6 chars" name=" UserModel.test studentId must min 6 chars" time="0.025">
    </testcase>
    <testcase classname=" UserModel.test change name without studentId must fail" name=" UserModel.test change name without studentId must fail" time="0.168">
    </testcase>
    <testcase classname=" UserModel.test change name with findOneandUpdate" name=" UserModel.test change name with findOneandUpdate" time="0.181">
    </testcase>
    <testcase classname=" UserModel.test change name with updateOne" name=" UserModel.test change name with updateOne" time="0.192">
    </testcase>
    <testcase classname=" UserModel.test change name without studentId with updateOne must fail" name=" UserModel.test change name without studentId with updateOne must fail" time="0.19">
    </testcase>
    <testcase classname=" UserModel.test Create User with minimal data" name=" UserModel.test Create User with minimal data" time="0.175">
    </testcase>
  </testsuite>
</testsuites>