<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="71" failures="0" errors="0" time="46.572">
  <testsuite name="UserService.test.ts" errors="0" failures="0" skipped="0" timestamp="2024-05-21T18:52:08" time="11.909" tests="18">
    <testcase classname=" UserService.test getAlleUser" name=" UserService.test getAlleUser" time="0.52">
    </testcase>
    <testcase classname=" UserService.test createUser " name=" UserService.test createUser " time="0.822">
    </testcase>
    <testcase classname=" UserService.test getOneUser by studentId(number)" name=" UserService.test getOneUser by studentId(number)" time="0.498">
    </testcase>
    <testcase classname=" UserService.test getOneUser by email" name=" UserService.test getOneUser by email" time="0.481">
    </testcase>
    <testcase classname=" UserService.test Create User with minimal data" name=" UserService.test Create User with minimal data" time="0.683">
    </testcase>
    <testcase classname=" UserService.test deleteUser" name=" UserService.test deleteUser" time="0.678">
    </testcase>
    <testcase classname=" UserService.test create user without password" name=" UserService.test create user without password" time="0.417">
    </testcase>
    <testcase classname=" UserService.test createUser with same studentId" name=" UserService.test createUser with same studentId" time="0.613">
    </testcase>
    <testcase classname=" UserService.test createUser with same email" name=" UserService.test createUser with same email" time="0.606">
    </testcase>
    <testcase classname=" UserService.test createUser with empty name" name=" UserService.test createUser with empty name" time="0.415">
    </testcase>
    <testcase classname=" UserService.test updateUser name" name=" UserService.test updateUser name" time="0.579">
    </testcase>
    <testcase classname=" UserService.test updateUser name + password" name=" UserService.test updateUser name + password" time="1.179">
    </testcase>
    <testcase classname=" UserService.test updateUser with empty name" name=" UserService.test updateUser with empty name" time="0.734">
    </testcase>
    <testcase classname=" UserService.test getUser with wrong studentID" name=" UserService.test getUser with wrong studentID" time="0.409">
    </testcase>
    <testcase classname=" UserService.test deleteUser not found" name=" UserService.test deleteUser not found" time="0.408">
    </testcase>
    <testcase classname=" UserService.test getOneUser without studentId and email must fail" name=" UserService.test getOneUser without studentId and email must fail" time="0.37">
    </testcase>
    <testcase classname=" UserService.test updateUser not found" name=" UserService.test updateUser not found" time="0.612">
    </testcase>
    <testcase classname=" UserService.test deleteUser not found" name=" UserService.test deleteUser not found" time="0.402">
    </testcase>
  </testsuite>
  <testsuite name="userRoute.test.ts" errors="0" failures="0" skipped="0" timestamp="2024-05-21T18:52:20" time="15.174" tests="10">
    <testcase classname=" /api/user getAlleUser" name=" /api/user getAlleUser" time="1.087">
    </testcase>
    <testcase classname=" /api/user/ get by studID" name=" /api/user/ get by studID" time="0.832">
    </testcase>
    <testcase classname=" /api/user/ get by email" name=" /api/user/ get by email" time="0.767">
    </testcase>
    <testcase classname=" /api/user/:identifier error handling" name=" /api/user/:identifier error handling" time="0.778">
    </testcase>
    <testcase classname=" /api/user/" name=" /api/user/" time="1.058">
    </testcase>
    <testcase classname=" /api/user/:id create User fail" name=" /api/user/:id create User fail" time="0.878">
    </testcase>
    <testcase classname=" /api/user/:id update User" name=" /api/user/:id update User" time="1.17">
    </testcase>
    <testcase classname=" /api/user/:id update User id not found" name=" /api/user/:id update User id not found" time="0.766">
    </testcase>
    <testcase classname=" /api/user/:id delete User" name=" /api/user/:id delete User" time="0.906">
    </testcase>
    <testcase classname=" /api/user/:id delete User id not found" name=" /api/user/:id delete User id not found" time="0.735">
    </testcase>
  </testsuite>
  <testsuite name="UserHash.test.ts" errors="0" failures="0" skipped="0" timestamp="2024-05-21T18:52:36" time="6.213" tests="10">
    <testcase classname=" UserHash.test. Passwort wird korrekt gehasht" name=" UserHash.test. Passwort wird korrekt gehasht" time="0.654">
    </testcase>
    <testcase classname=" UserHash.test.js Passwort Änderung" name=" UserHash.test.js Passwort Änderung" time="1.49">
    </testcase>
    <testcase classname=" UserHash.test.js Passwort bleibt unverändert, wenn nicht geändert" name=" UserHash.test.js Passwort bleibt unverändert, wenn nicht geändert" time="0.535">
    </testcase>
    <testcase classname=" UserHash.test.js isCorrectPassword gibt true für korrektes Passwort" name=" UserHash.test.js isCorrectPassword gibt true für korrektes Passwort" time="0.408">
    </testcase>
    <testcase classname=" UserHash.test.js isCorrectPassword gibt false für ungültiges Passwort" name=" UserHash.test.js isCorrectPassword gibt false für ungültiges Passwort" time="0.427">
    </testcase>
    <testcase classname=" UserHash.test.js User kann nicht mit leerem Passwort erstellt werden" name=" UserHash.test.js User kann nicht mit leerem Passwort erstellt werden" time="0.256">
    </testcase>
    <testcase classname=" UserHash.test.js isCorrectPassword gibt false wenn falsches Passwort bei gespeichertem User eingegeben wird" name=" UserHash.test.js isCorrectPassword gibt false wenn falsches Passwort bei gespeichertem User eingegeben wird" time="0.44">
    </testcase>
    <testcase classname=" UserHash.test.js isCorrectPassword gibt false wenn der Passworthash bei gespeichertem User eingegeben wird" name=" UserHash.test.js isCorrectPassword gibt false wenn der Passworthash bei gespeichertem User eingegeben wird" time="0.244">
    </testcase>
    <testcase classname=" UserHash.test.js isCorrectPassword gibt fehler wenn der Passwortänderung nicht gespeichert wird" name=" UserHash.test.js isCorrectPassword gibt fehler wenn der Passwortänderung nicht gespeichert wird" time="0.409">
    </testcase>
    <testcase classname=" UserHash.test.js isCorrectPassword gibt false wenn kein Passwort und kein Passwort eingegeben wird" name=" UserHash.test.js isCorrectPassword gibt false wenn kein Passwort und kein Passwort eingegeben wird" time="0.392">
    </testcase>
  </testsuite>
  <testsuite name="loginRoute.test.ts" errors="0" failures="0" skipped="0" timestamp="2024-05-21T18:52:42" time="5.041" tests="2">
    <testcase classname=" /api/login login with correct credentials" name=" /api/login login with correct credentials" time="0.942">
    </testcase>
    <testcase classname=" /api/login login with wrong credentials" name=" /api/login login with wrong credentials" time="0.434">
    </testcase>
  </testsuite>
  <testsuite name="AuthenticationService.test.ts" errors="0" failures="0" skipped="0" timestamp="2024-05-21T18:52:47" time="2.969" tests="7">
    <testcase classname=" AuthenticationService.test Loggin Password correct" name=" AuthenticationService.test Loggin Password correct" time="0.429">
    </testcase>
    <testcase classname=" AuthenticationService.test Loggin Password not correct" name=" AuthenticationService.test Loggin Password not correct" time="0.168">
    </testcase>
    <testcase classname=" AuthenticationService.test Loggin User not found" name=" AuthenticationService.test Loggin User not found" time="0.162">
    </testcase>
    <testcase classname=" AuthenticationService.test Loggin Password not found" name=" AuthenticationService.test Loggin Password not found" time="0.169">
    </testcase>
    <testcase classname=" AuthenticationService.test Loggin Admin" name=" AuthenticationService.test Loggin Admin" time="0.423">
    </testcase>
    <testcase classname=" AuthenticationService.test Loggin User" name=" AuthenticationService.test Loggin User" time="0.279">
    </testcase>
    <testcase classname=" AuthenticationService.test Loggin Default" name=" AuthenticationService.test Loggin Default" time="0.274">
    </testcase>
  </testsuite>
  <testsuite name="UserModel.test.ts" errors="0" failures="0" skipped="0" timestamp="2024-05-21T18:52:50" time="2.465" tests="11">
    <testcase classname=" UserModel.test createUser" name=" UserModel.test createUser" time="0.24">
    </testcase>
    <testcase classname=" UserModel.test createUser twice same name" name=" UserModel.test createUser twice same name" time="0.326">
    </testcase>
    <testcase classname=" UserModel.test createUser twice same studentId must fail" name=" UserModel.test createUser twice same studentId must fail" time="0.165">
    </testcase>
    <testcase classname=" UserModel.test createUser without password must fail" name=" UserModel.test createUser without password must fail" time="0.024">
    </testcase>
    <testcase classname=" UserModel.test find user by name" name=" UserModel.test find user by name" time="0.176">
    </testcase>
    <testcase classname=" UserModel.test studentId must min 6 chars" name=" UserModel.test studentId must min 6 chars" time="0.026">
    </testcase>
    <testcase classname=" UserModel.test change name without studentId must fail" name=" UserModel.test change name without studentId must fail" time="0.167">
    </testcase>
    <testcase classname=" UserModel.test change name with findOneandUpdate" name=" UserModel.test change name with findOneandUpdate" time="0.179">
    </testcase>
    <testcase classname=" UserModel.test change name with updateOne" name=" UserModel.test change name with updateOne" time="0.177">
    </testcase>
    <testcase classname=" UserModel.test change name without studentId with updateOne must fail" name=" UserModel.test change name without studentId with updateOne must fail" time="0.174">
    </testcase>
    <testcase classname=" UserModel.test Create User with minimal data" name=" UserModel.test Create User with minimal data" time="0.164">
    </testcase>
  </testsuite>
  <testsuite name="ServiceHelper.test.ts" errors="0" failures="0" skipped="0" timestamp="2024-05-21T18:52:53" time="0.837" tests="12">
    <testcase classname=" dateToString zweistellig" name=" dateToString zweistellig" time="0.006">
    </testcase>
    <testcase classname=" dateToString einstellig" name=" dateToString einstellig" time="0.003">
    </testcase>
    <testcase classname=" stringToDate zweistellig" name=" stringToDate zweistellig" time="0.003">
    </testcase>
    <testcase classname=" stringToDate einstellig mit Null" name=" stringToDate einstellig mit Null" time="0.003">
    </testcase>
    <testcase classname=" stringToDate einstellig ohne Null" name=" stringToDate einstellig ohne Null" time="0.002">
    </testcase>
    <testcase classname=" isEmail test@bht-berlin.de" name=" isEmail test@bht-berlin.de" time="0.002">
    </testcase>
    <testcase classname=" isEmail test2@bht-berlin.de" name=" isEmail test2@bht-berlin.de" time="0.002">
    </testcase>
    <testcase classname=" isEmail test3@bht-berlin.de" name=" isEmail test3@bht-berlin.de" time="0.002">
    </testcase>
    <testcase classname=" isEmail invalid@domain.com" name=" isEmail invalid@domain.com" time="0.002">
    </testcase>
    <testcase classname=" isEmail another-invalid-email" name=" isEmail another-invalid-email" time="0.003">
    </testcase>
    <testcase classname=" isEmail @bht-berlin.de" name=" isEmail @bht-berlin.de" time="0.002">
    </testcase>
    <testcase classname=" isEmail test@bht-berlin" name=" isEmail test@bht-berlin" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="test.test.ts" errors="0" failures="0" skipped="0" timestamp="2024-05-21T18:52:54" time="0.635" tests="1">
    <testcase classname=" test" name=" test" time="0.003">
    </testcase>
  </testsuite>
</testsuites>